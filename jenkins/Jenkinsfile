pipeline {
	agent {
		label 'master'
		}
    tools {
           maven "Maven3"
    }
	environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "54.191.157.240:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "Py_HelloWorld"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "Nexus3"
	}
	stages {
		stage('Build'){
			steps ('Build') {
					echo "========= start building artifact ========="
				dir ('./') {
					sh 'python3 setup.py sdist bdist_wheel'
					}
				}
			}
		stage('upload'){
			steps{
			nexusArtifactUploader artifacts: [
				[
					artifactId: 'helloworls',
					classifier: '', 
					file: 'dist/helloworls-0.0.4.tar.gz',
					type: 'tar.gz'
				]
			], 
			credentialsId: 'nexus3',
			groupId: 'Hello_py',
			nexusUrl: '54.191.157.240:8081',
			nexusVersion: 'nexus3',
			protocol: 'http',
			repository: 'Nexus_Maven_Py_2',
			version: '0.0.4'
			}
		}
        	
		stage("get artifact from nexus") {
			steps ('artifact from nexus') {
				withCredentials([string(credentialsId: 'Nexus_1', variable: 'Nexus_1')]) {
					
					script {
						downloadartifact = "sudo curl -v -u admin:${Nexus_1} -o helloworld.tar.gz http://54.191.157.240:8081/repository/Nexus_Maven_Py_2/Hello_py/helloworls/0.0.4/helloworls-0.0.4.tar.gz"
						unzip = "tar -xf helloworld.tar.gz"
						dockerRun = "sudo docker run -p 80:5000 -d --name hello_py gregdelanis/hello_py:1.0"
						dockerbuild = "cd helloworls-0.0.4/src/ && sudo docker build -t gregdelanis/hello_py:1.0 ."
						echo "========= downloading artifacts unzip and run========="
						sshagent(['DockerServer']) {	
							sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${downloadartifact}"
							sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${unzip}"
							sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${dockerbuild}"
							sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${dockerRun}"
						}
					}
				}
			}
		}
		
		}

}
